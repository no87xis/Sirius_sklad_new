#!/usr/bin/env python3
"""
–ò–¥–µ–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Sirius Group
–ë–µ–∑ –∫–æ—Å—Ç—ã–ª–µ–π, —Å –ø–æ–ª–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
"""

import sys
import os
import traceback

def main():
    try:
        print("üöÄ Sirius Group - –ò–¥–µ–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
        print("=" * 60)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
        project_path = os.path.dirname(os.path.abspath(__file__))
        sys.path.insert(0, project_path)
        print(f"üìÅ –ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É: {project_path}")
        
        # –®–∞–≥ 1: –ò–º–ø–æ—Ä—Ç –±–∞–∑–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π
        print("\nüìã –®–∞–≥ 1: –ò–º–ø–æ—Ä—Ç –±–∞–∑–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π...")
        from app.db import Base, engine
        print("‚úÖ Base –∏ engine –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –®–∞–≥ 2: –ò–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ Base
        print("\nüìã –®–∞–≥ 2: –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π...")
        try:
            from app.models.user import User, UserRole
            print("‚úÖ User –º–æ–¥–µ–ª—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ User: {e}")
            return False
            
        try:
            from app.models.product import Product
            print("‚úÖ Product –º–æ–¥–µ–ª—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Product: {e}")
            return False
            
        try:
            from app.models.order import Order
            print("‚úÖ Order –º–æ–¥–µ–ª—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Order: {e}")
            return False
            
        try:
            from app.models.shop_cart import ShopCart
            print("‚úÖ ShopCart –º–æ–¥–µ–ª—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ ShopCart: {e}")
            return False
            
        try:
            from app.models.product_photo import ProductPhoto
            print("‚úÖ ProductPhoto –º–æ–¥–µ–ª—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ ProductPhoto: {e}")
            return False
        
        # –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
        print("\nüìã –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
        Base.metadata.create_all(bind=engine)
        print("‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∞
        print("\nüìã –®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∞...")
        try:
            from app.db import SessionLocal
            from app.services.auth import get_password_hash
            
            db = SessionLocal()
            try:
                admin = db.query(User).filter(User.username == 'admin').first()
                if not admin:
                    admin_user = User(
                        username='admin',
                        hashed_password=get_password_hash('admin123'),
                        role=UserRole.ADMIN,
                        is_active=True,
                        is_superuser=True
                    )
                    db.add(admin_user)
                    db.commit()
                    print('‚úÖ –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω: admin / admin123')
                else:
                    print('‚úÖ –ê–¥–º–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
            finally:
                db.close()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∞: {e}")
            traceback.print_exc()
            return False
        
        # –®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
        print("\nüìã –®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞...")
        try:
            db = SessionLocal()
            try:
                test_product = db.query(Product).filter(Product.name == '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç').first()
                if not test_product:
                    from app.constants import DEFAULT_STATUS
                    test_product = Product(
                        name='–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç',
                        description='–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞',
                        price_rub=1000.00,
                        stock_quantity=100,
                        availability_status=DEFAULT_STATUS
                    )
                    db.add(test_product)
                    db.commit()
                    print('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç —Å–æ–∑–¥–∞–Ω')
                else:
                    print('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
            finally:
                db.close()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞: {e}")
            traceback.print_exc()
            return False
        
        print("\n" + "=" * 60)
        print("üéâ –ò–î–ï–ê–õ–¨–ù–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞")
        print("‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")
        print("‚úÖ –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω: admin / admin123")
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç —Å–æ–∑–¥–∞–Ω")
        print("=" * 60)
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        print("\nüîç –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏:")
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = main()
    if not success:
        print("\nüí• –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å!")
        sys.exit(1)
    else:
        print("\nüöÄ –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É!")
