#!/usr/bin/env python3
"""
–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –º–∞–≥–∞–∑–∏–Ω–∞
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.db import SessionLocal
from app.models import Product, ShopCart, ShopOrder
from app.services.shop_cart import ShopCartService
from app.services.shop_orders import ShopOrderService
from app.services.order_code import OrderCodeService

def test_shop_complete():
    """–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –º–∞–≥–∞–∑–∏–Ω–∞"""
    print("üß™ –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è –º–∞–≥–∞–∑–∏–Ω–∞...")
    
    db = SessionLocal()
    
    try:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
        products = db.query(Product).all()
        print(f"‚úÖ –¢–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑–µ: {len(products)}")
        
        if not products:
            print("‚ö†Ô∏è  –ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!")
            return
        
        # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ—Ä–∑–∏–Ω—É
        print("\nüõí –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã...")
        test_session = "test_session_complete"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω—É
        cart_items = []
        for i, product in enumerate(products[:2]):  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 2 —Ç–æ–≤–∞—Ä–∞
            cart_data = {
                "product_id": product.id,
                "quantity": i + 1,
                "session_id": test_session
            }
            
            from app.schemas.shop_cart import ShopCartCreate
            cart_item = ShopCartService.add_to_cart(db, ShopCartCreate(**cart_data))
            cart_items.append(cart_item)
            print(f"   ‚úÖ –¢–æ–≤–∞—Ä '{product.name}' –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {i + 1})")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
        cart_summary = ShopCartService.get_cart_summary(db, test_session)
        print(f"   ‚úÖ –ö–æ—Ä–∑–∏–Ω–∞: {cart_summary.total_items} —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ {cart_summary.total_amount} ‚ÇΩ")
        
        # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
        print("\nüìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤...")
        
        from app.schemas.shop_order import ShopOrderCreate
        order_data = ShopOrderCreate(
            customer_name="–¢–µ—Å—Ç–æ–≤—ã–π –ö–ª–∏–µ–Ω—Ç",
            customer_phone="+79991234567",
            customer_city="–ì—Ä–æ–∑–Ω—ã–π",
            payment_method_id=1,  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –µ—Å—Ç—å —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã —Å ID 1
            cart_items=[{"product_id": item.product_id, "quantity": item.quantity} for item in cart_items]
        )
        
        try:
            orders = ShopOrderService.create_orders_from_cart(db, order_data)
            print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {len(orders)}")
            
            for order in orders:
                print(f"      üì¶ –ó–∞–∫–∞–∑ {order.order_code}: {order.product_name} x{order.quantity} = {order.total_amount} ‚ÇΩ")
                print(f"         –°—Ç–∞—Ç—É—Å: {order.status}")
                print(f"         –†–µ–∑–µ—Ä–≤ –¥–æ: {order.reserved_until.strftime('%d.%m.%Y %H:%M')}")
            
            # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –∑–∞–∫–∞–∑–æ–≤
            print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤...")
            
            from app.schemas.shop_order import ShopOrderSearch
            search_data = ShopOrderSearch(
                order_code=orders[0].order_code,
                customer_phone="+79991234567"
            )
            
            found_orders = ShopOrderService.search_orders(db, search_data)
            print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {len(found_orders)}")
            
            # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
            print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...")
            
            analytics = ShopOrderService.get_analytics(db)
            print(f"   ‚úÖ –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: {analytics.total_orders}")
            print(f"   ‚úÖ –û–±—â–∞—è —Å—É–º–º–∞: {analytics.total_amount} ‚ÇΩ")
            print(f"   ‚úÖ –ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ: {analytics.reserved_not_paid} –Ω–∞ {analytics.reserved_not_paid_amount} ‚ÇΩ")
            
            # 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
            print("\n‚úèÔ∏è  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞...")
            
            from app.schemas.shop_order import ShopOrderUpdate
            update_data = ShopOrderUpdate(
                status="paid"
            )
            
            updated_order = ShopOrderService.update_order(db, orders[0].id, update_data)
            if updated_order:
                print(f"   ‚úÖ –ó–∞–∫–∞–∑ –æ–±–Ω–æ–≤–ª–µ–Ω: —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {updated_order.status}")
                print(f"      –í—Ä–µ–º—è –æ–ø–ª–∞—Ç—ã: {updated_order.paid_at}")
            else:
                print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–∫–∞–∑")
            
            # 7. –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            print("\nüßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã
            for order in orders:
                db.delete(order)
            
            # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
            ShopCartService.clear_cart(db, test_session)
            
            db.commit()
            print("   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤: {e}")
            import traceback
            traceback.print_exc()
        
        print("\nüéØ –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        db.close()

if __name__ == "__main__":
    test_shop_complete()
