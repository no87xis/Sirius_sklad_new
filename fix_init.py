#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Sirius Group
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_path = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, project_path)

try:
    print("üöÄ Sirius Group - –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Base –∏ engine
    from app.db import Base, engine
    print("‚úÖ Base –∏ engine –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ Base
    from app.models.user import User, UserRole
    from app.models.product import Product
    from app.models.order import Order
    from app.models.shop_cart import ShopCart
    from app.models.product_photo import ProductPhoto
    
    print("‚úÖ –í—Å–µ –º–æ–¥–µ–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
    
    # –°–æ–∑–¥–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
    print("üî® –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
    Base.metadata.create_all(bind=engine)
    print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")
    
    # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞
    print("üë§ –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∞...")
    from app.db import SessionLocal
    from app.services.auth import get_password_hash
    
    db = SessionLocal()
    try:
        admin = db.query(User).filter(User.username == 'admin').first()
        if not admin:
            admin_user = User(
                username='admin',
                hashed_password=get_password_hash('admin123'),
                role=UserRole.ADMIN,
                is_active=True,
                is_superuser=True
            )
            db.add(admin_user)
            db.commit()
            print('‚úÖ –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω: admin / admin123')
        else:
            print('‚úÖ –ê–¥–º–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
    finally:
        db.close()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç —Å –ü–†–ê–í–ò–õ–¨–ù–´–ú–ò –ø–æ–ª—è–º–∏
    print("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞...")
    try:
        db = SessionLocal()
        try:
            test_product = db.query(Product).filter(Product.name == '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç').first()
            if not test_product:
                from app.constants import DEFAULT_STATUS
                test_product = Product(
                    name='–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç',
                    description='–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞',
                    sell_price_rub=1000.00,  # –ü–†–ê–í–ò–õ–¨–ù–û–ï –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è
                    quantity=100,
                    availability_status=DEFAULT_STATUS
                )
                db.add(test_product)
                db.commit()
                print('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç —Å–æ–∑–¥–∞–Ω')
            else:
                print('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
        finally:
            db.close()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return False
    
    print("\n" + "=" * 50)
    print("üéâ –ë–ê–ó–ê –î–ê–ù–ù–´–• –ò–°–ü–†–ê–í–õ–ï–ù–ê!")
    print("‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")
    print("‚úÖ –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω: admin / admin123")
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç —Å–æ–∑–¥–∞–Ω")
    print("=" * 50)
    
    return True
    
except Exception as e:
    print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
    import traceback
    traceback.print_exc()
    return False

if __name__ == "__main__":
    success = main()
    if not success:
        print("\nüí• –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å!")
        sys.exit(1)
    else:
        print("\nüöÄ –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É!")
