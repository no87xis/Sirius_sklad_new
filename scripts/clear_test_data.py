#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–∏—Å—Ç–µ–º—ã –°–∏—Ä–∏—É—Å
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from sqlalchemy.orm import Session
from app.db import SessionLocal, engine, Base
from app.models import User, Product, Supply, Order, OperationLog, UserRole
from app.services.auth import get_password_hash

def clear_test_data():
    """–û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–∏—Å—Ç–µ–º—ã"""
    db = SessionLocal()
    
    try:
        print("üßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–∏—Å—Ç–µ–º—ã –°–∏—Ä–∏—É—Å...")
        
        # 1. –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ –æ–ø–µ—Ä–∞—Ü–∏–π
        print("–£–¥–∞–ª–µ–Ω–∏–µ –ª–æ–≥–æ–≤ –æ–ø–µ—Ä–∞—Ü–∏–π...")
        deleted_logs = db.query(OperationLog).delete()
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {deleted_logs} –ª–æ–≥–æ–≤ –æ–ø–µ—Ä–∞—Ü–∏–π")
        
        # 2. –û—á–∏—Å—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤
        print("–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤...")
        deleted_orders = db.query(Order).delete()
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {deleted_orders} –∑–∞–∫–∞–∑–æ–≤")
        
        # 3. –û—á–∏—Å—Ç–∫–∞ –ø–æ—Å—Ç–∞–≤–æ–∫
        print("–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤–æ–∫...")
        deleted_supplies = db.query(Supply).delete()
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {deleted_supplies} –ø–æ—Å—Ç–∞–≤–æ–∫")
        
        # 4. –û—á–∏—Å—Ç–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
        print("–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤...")
        deleted_products = db.query(Product).delete()
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {deleted_products} —Ç–æ–≤–∞—Ä–æ–≤")
        
        # 5. –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∫—Ä–æ–º–µ admin)
        print("–£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        test_users = db.query(User).filter(User.username != "admin").all()
        deleted_users = 0
        for user in test_users:
            db.delete(user)
            deleted_users += 1
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {deleted_users} —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –µ—Å–ª–∏ –Ω–µ—Ç - —Å–æ–∑–¥–∞–µ–º
        admin_user = db.query(User).filter(User.username == "admin").first()
        if not admin_user:
            print("–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin...")
            admin_user = User(
                username="admin",
                hashed_password=get_password_hash("admin123"),
                role=UserRole.ADMIN
            )
            db.add(admin_user)
            print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin —Å–æ–∑–¥–∞–Ω: admin / admin123")
        else:
            print("‚ÑπÔ∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        db.commit()
        
        print("\nüéØ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞!")
        print("\n–û—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–∞–Ω–Ω—ã–µ:")
        print(f"  - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {db.query(User).count()}")
        print(f"  - –¢–æ–≤–∞—Ä—ã: {db.query(Product).count()}")
        print(f"  - –ü–æ—Å—Ç–∞–≤–∫–∏: {db.query(Supply).count()}")
        print(f"  - –ó–∞–∫–∞–∑—ã: {db.query(Order).count()}")
        print(f"  - –õ–æ–≥–∏ –æ–ø–µ—Ä–∞—Ü–∏–π: {db.query(OperationLog).count()}")
        
        print("\nüîë –î–æ—Å—Ç—É–ø –¥–ª—è –≤—Ö–æ–¥–∞:")
        print("  admin / admin123")
        
        print("\n‚ú® –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω—è—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        db.rollback()
        raise
    finally:
        db.close()

if __name__ == "__main__":
    clear_test_data()
