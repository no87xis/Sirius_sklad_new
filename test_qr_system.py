#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã QR-–∫–æ–¥–æ–≤ –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
"""

import requests
import time
import json
from urllib.parse import urljoin

BASE_URL = "http://127.0.0.1:8000"

def test_shop_access():
    """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –º–∞–≥–∞–∑–∏–Ω—É"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –º–∞–≥–∞–∑–∏–Ω—É...")
    
    try:
        response = requests.get(f"{BASE_URL}/shop/")
        if response.status_code == 200:
            print("‚úÖ –ú–∞–≥–∞–∑–∏–Ω –¥–æ—Å—Ç—É–ø–µ–Ω")
            return True
        else:
            print(f"‚ùå –ú–∞–≥–∞–∑–∏–Ω –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –º–∞–≥–∞–∑–∏–Ω—É: {e}")
        return False

def test_qr_scanner_page():
    """–¢–µ—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∫–∞–Ω–µ—Ä–∞ QR-–∫–æ–¥–æ–≤"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–∫–∞–Ω–µ—Ä–∞ QR-–∫–æ–¥–æ–≤...")
    
    try:
        response = requests.get(f"{BASE_URL}/shop/admin/qr-scanner")
        if response.status_code == 200:
            print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–∫–∞–Ω–µ—Ä–∞ QR-–∫–æ–¥–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–∞")
            return True
        else:
            print(f"‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–∫–∞–Ω–µ—Ä–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∫–∞–Ω–µ—Ä—É: {e}")
        return False

def test_qr_api():
    """–¢–µ—Å—Ç API –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ QR-–∫–æ–¥–æ–≤"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API –¥–ª—è QR-–∫–æ–¥–æ–≤...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
        response = requests.post(f"{BASE_URL}/shop/admin/qr-scan", data={
            'qr_data': 'invalid_token_123'
        })
        
        if response.status_code == 200:
            result = response.json()
            if not result.get('success') and '–ù–µ–≤–µ—Ä–Ω—ã–π QR-–∫–æ–¥' in result.get('message', ''):
                print("‚úÖ API –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã")
                return True
            else:
                print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç API: {result}")
                return False
        else:
            print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API: {e}")
        return False

def test_public_qr_route():
    """–¢–µ—Å—Ç –ø—É–±–ª–∏—á–Ω–æ–≥–æ —Ä–æ—É—Ç–∞ –¥–ª—è QR-–∫–æ–¥–æ–≤"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π —Ä–æ—É—Ç –¥–ª—è QR-–∫–æ–¥–æ–≤...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
        response = requests.get(f"{BASE_URL}/o/invalid_token_123")
        if response.status_code == 404:
            print("‚úÖ –ü—É–±–ª–∏—á–Ω—ã–π —Ä–æ—É—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 404 –¥–ª—è –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤")
            return True
        else:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ —Ä–æ—É—Ç–∞: {e}")
        return False

def test_database_schema():
    """–¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç
        response = requests.get(f"{BASE_URL}/shop/")
        if response.status_code == 200:
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞ (—Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç)")
            return True
        else:
            print(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã QR-–∫–æ–¥–æ–≤")
    print("=" * 50)
    
    tests = [
        test_shop_access,
        test_qr_scanner_page,
        test_qr_api,
        test_public_qr_route,
        test_database_schema
    ]
    
    passed = 0
    total = len(tests)
    
    for test in tests:
        try:
            if test():
                passed += 1
        except Exception as e:
            print(f"‚ùå –¢–µ—Å—Ç {test.__name__} —É–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π: {e}")
    
    print("\n" + "=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! –°–∏—Å—Ç–µ–º–∞ QR-–∫–æ–¥–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ.")
    
    return passed == total

if __name__ == "__main__":
    success = main()
    exit(0 if success else 1)
