#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ Sirius Group
"""

import sys
import os

def main():
    print("üîç Sirius Group - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
    print(f"üêç Python –≤–µ—Ä—Å–∏—è: {sys.version}")
    print(f"üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
    print("\nüìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:")
    for item in os.listdir('.'):
        if os.path.isdir(item):
            print(f"  üìÅ {item}/")
        else:
            print(f"  üìÑ {item}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º app –ø–∞–ø–∫—É
    if os.path.exists('app'):
        print("\nüìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ app/:")
        for item in os.listdir('app'):
            if os.path.isdir(item):
                print(f"  üìÅ {item}/")
            else:
                print(f"  üìÑ {item}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º main.py
    if os.path.exists('app/main.py'):
        print("\nüìÑ app/main.py –Ω–∞–π–¥–µ–Ω")
        try:
            with open('app/main.py', 'r', encoding='utf-8') as f:
                content = f.read()
                print(f"  üìè –†–∞–∑–º–µ—Ä: {len(content)} —Å–∏–º–≤–æ–ª–æ–≤")
                print(f"  üîç –°–æ–¥–µ—Ä–∂–∏—Ç 'FastAPI': {'FastAPI' in content}")
                print(f"  üîç –°–æ–¥–µ—Ä–∂–∏—Ç 'app.include_router': {'app.include_router' in content}")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è: {e}")
    else:
        print("\n‚ùå app/main.py –ù–ï –ù–ê–ô–î–ï–ù!")
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º requirements.txt
    if os.path.exists('requirements.txt'):
        print("\nüìã requirements.txt –Ω–∞–π–¥–µ–Ω")
        try:
            with open('requirements.txt', 'r') as f:
                lines = f.readlines()
                print(f"  üìè –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {len(lines)}")
                for line in lines[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                    print(f"    {line.strip()}")
                if len(lines) > 5:
                    print(f"    ... –∏ –µ—â–µ {len(lines) - 5}")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è: {e}")
    else:
        print("\n‚ùå requirements.txt –ù–ï –ù–ê–ô–î–ï–ù!")
    
    # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if os.path.exists('venv'):
        print("\nüêç –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ")
        if os.path.exists('venv/bin/python') or os.path.exists('venv/Scripts/python.exe'):
            print("  ‚úÖ Python –Ω–∞–π–¥–µ–Ω –≤ venv")
        else:
            print("  ‚ùå Python –ù–ï –Ω–∞–π–¥–µ–Ω –≤ venv")
    else:
        print("\n‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –ù–ï –ù–ê–ô–î–ï–ù–û!")
    
    # 7. –ü—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏
    print("\nüîß –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π:")
    
    try:
        import app
        print("  ‚úÖ import app - –£–°–ü–ï–®–ù–û")
    except Exception as e:
        print(f"  ‚ùå import app - –û–®–ò–ë–ö–ê: {e}")
    
    try:
        from app import db
        print("  ‚úÖ from app import db - –£–°–ü–ï–®–ù–û")
    except Exception as e:
        print(f"  ‚ùå from app import db - –û–®–ò–ë–ö–ê: {e}")
    
    try:
        from app import models
        print("  ‚úÖ from app import models - –£–°–ü–ï–®–ù–û")
    except Exception as e:
        print(f"  ‚ùå from app import models - –û–®–ò–ë–ö–ê: {e}")
    
    try:
        from app.main import app
        print("  ‚úÖ from app.main import app - –£–°–ü–ï–®–ù–û")
    except Exception as e:
        print(f"  ‚ùå from app.main import app - –û–®–ò–ë–ö–ê: {e}")
    
    print("\n" + "=" * 50)
    print("üéØ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("üìã –¢–µ–ø–µ—Ä—å –º—ã –∑–Ω–∞–µ–º, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")

if __name__ == "__main__":
    main()
