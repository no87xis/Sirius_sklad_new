#!/usr/bin/env python3
"""
–¢–µ—Å—Ç API –∫–æ—Ä–∑–∏–Ω—ã
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã"""
    try:
        from app.routers.shop_api import router
        print("‚úÖ shop_api router –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ shop_api router: {e}")
        return False
    
    try:
        from app.services.shop_cart import ShopCartService
        print("‚úÖ ShopCartService –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ ShopCartService: {e}")
        return False
    
    try:
        from app.schemas.shop_cart import ShopCartCreate
        print("‚úÖ ShopCartCreate —Å—Ö–µ–º–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ ShopCartCreate: {e}")
        return False
    
    return True

def test_router_routes():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Ä—à—Ä—É—Ç—ã —Ä–æ—É—Ç–µ—Ä–∞"""
    try:
        from app.routers.shop_api import router
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–æ—É—Ç–µ—Ä –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å
        if router.prefix == "/api/shop":
            print("‚úÖ –†–æ—É—Ç–µ—Ä –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å /api/shop")
        else:
            print(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å —Ä–æ—É—Ç–µ—Ä–∞: {router.prefix}")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å –Ω—É–∂–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
        routes = [route.path for route in router.routes]
        if "/cart/add-form" in routes:
            print("‚úÖ –ú–∞—Ä—à—Ä—É—Ç /cart/add-form –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚ùå –ú–∞—Ä—à—Ä—É—Ç /cart/add-form –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã: {routes}")
            return False
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤: {e}")
        return False

def test_main_app():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º main.py"""
    try:
        from app.main import app
        print("‚úÖ main.py –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–æ—É—Ç–µ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω
        routes = [route.path for route in app.routes]
        if "/api/shop/cart/add-form" in routes:
            print("‚úÖ –ú–∞—Ä—à—Ä—É—Ç /api/shop/cart/add-form –ø–æ–¥–∫–ª—é—á–µ–Ω –≤ main.py")
        else:
            print("‚ùå –ú–∞—Ä—à—Ä—É—Ç /api/shop/cart/add-form –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –≤ main.py")
            print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã: {routes}")
            return False
        
        return True
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ main.py: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∫–æ—Ä–∑–∏–Ω—ã")
    print("=" * 50)
    
    tests = [
        ("–ò–º–ø–æ—Ä—Ç—ã", test_imports),
        ("–ú–∞—Ä—à—Ä—É—Ç—ã —Ä–æ—É—Ç–µ—Ä–∞", test_router_routes),
        ("–ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", test_main_app)
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        print(f"\nüìã {test_name}:")
        if test_func():
            passed += 1
        else:
            print(f"‚ùå –¢–µ—Å—Ç {test_name} –ø—Ä–æ–≤–∞–ª–µ–Ω")
    
    print("\n" + "=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("üéâ API –∫–æ—Ä–∑–∏–Ω—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("\nüí° –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –≤—Å–µ –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:")
        print("  1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: scripts\\win\\serve_dev.cmd")
        print("  2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –æ—à–∏–±–∫–∏ JavaScript")
        print("  3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Network tab –≤ DevTools –±—Ä–∞—É–∑–µ—Ä–∞")
        return True
    else:
        print("‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å API –∫–æ—Ä–∑–∏–Ω—ã.")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)

