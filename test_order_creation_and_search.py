#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –∏ –∏—Ö –ø–æ–∏—Å–∫–∞
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç:
1. –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ (–æ—Ç–¥–µ–ª—å–Ω—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞)
2. –ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–æ–≤ –ø–æ –∫–æ–¥—É
3. WhatsApp —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º –æ–ø–ª–∞—Ç—ã
"""

import requests
import time
from bs4 import BeautifulSoup

BASE_URL = "http://127.0.0.1:8000"

def test_shop_access():
    """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –º–∞–≥–∞–∑–∏–Ω—É"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –º–∞–≥–∞–∑–∏–Ω—É...")
    try:
        response = requests.get(f"{BASE_URL}/shop/")
        if response.status_code == 200:
            print("‚úÖ –ú–∞–≥–∞–∑–∏–Ω –¥–æ—Å—Ç—É–ø–µ–Ω")
            return True
        else:
            print(f"‚ùå –ú–∞–≥–∞–∑–∏–Ω –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –º–∞–≥–∞–∑–∏–Ω—É: {e}")
        return False

def test_add_to_cart():
    """–¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É"""
    print("üõí –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É...")
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
        response = requests.get(f"{BASE_URL}/shop/")
        soup = BeautifulSoup(response.text, 'html.parser')
        
        # –ò—â–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä—ã
        product_links = soup.find_all('a', href=lambda x: x and '/shop/product/' in x)
        
        if not product_links:
            print("‚ùå –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ")
            return False
        
        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä
        product_url = product_links[0]['href']
        if not product_url.startswith('http'):
            product_url = BASE_URL + product_url
        
        print(f"üì¶ –ù–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä: {product_url}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ—Ä–∑–∏–Ω—É
        product_id = product_url.split('/')[-1]
        cart_data = {
            'product_id': product_id,
            'quantity': '2'
        }
        
        print(f"DEBUG: Adding to cart: product_id={product_id}, quantity=2")
        response = requests.post(f"{BASE_URL}/shop/cart/add", data=cart_data, allow_redirects=False)
        
        if response.status_code == 303:  # Redirect –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
            print("‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–≤–∞—Ä –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω–µ
            cart_response = requests.get(f"{BASE_URL}/shop/cart")
            if cart_response.status_code == 200:
                soup = BeautifulSoup(cart_response.text, 'html.parser')
                if "–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞" not in cart_response.text:
                    print("‚úÖ –ö–æ—Ä–∑–∏–Ω–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–≤–∞—Ä—ã")
                    return True
                else:
                    print("‚ùå –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è")
                    return False
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É: {cart_response.status_code}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã: {e}")
        return False

def test_checkout():
    """–¢–µ—Å—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞"""
    print("üí≥ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞...")
    try:
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è cookies
        session = requests.Session()
        
        # –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
        response = session.get(f"{BASE_URL}/shop/")
        if response.status_code != 200:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –º–∞–≥–∞–∑–∏–Ω–∞: {response.status_code}")
            return None
        
        soup = BeautifulSoup(response.text, 'html.parser')
        product_links = soup.find_all('a', href=lambda x: x and '/shop/product/' in x)
        
        if not product_links:
            print("‚ùå –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ")
            return None
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
        product_id = product_links[0]['href'].split('/')[-1]
        cart_data = {
            'product_id': product_id,
            'quantity': '2'
        }
        
        cart_response = session.post(f"{BASE_URL}/shop/cart/add", data=cart_data, allow_redirects=False)
        if cart_response.status_code != 303:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É: {cart_response.status_code}")
            return None
        
        # –¢–µ–ø–µ—Ä—å –æ—Ñ–æ—Ä–º–ª—è–µ–º –∑–∞–∫–∞–∑
        checkout_data = {
            'customer_name': '–¢–µ—Å—Ç –¢–µ—Å—Ç–æ–≤',
            'customer_phone': '+7 (999) 123-45-67',
            'customer_city': '–ú–æ—Å–∫–≤–∞',
            'payment_method_id': '1'  # ID —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
        }
        
        response = session.post(f"{BASE_URL}/shop/checkout", data=checkout_data, allow_redirects=False)
        
        if response.status_code == 303:  # Redirect –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
            print("‚úÖ –ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω")
            # –ü–æ–ª—É—á–∞–µ–º URL —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
            redirect_url = response.headers.get('Location')
            print(f"DEBUG: Redirect URL: {redirect_url}")
            
            if redirect_url and 'order-success' in redirect_url:
                print(f"DEBUG: order-success found in redirect URL")
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–¥—ã –∑–∞–∫–∞–∑–æ–≤ –∏–∑ URL
                if 'codes=' in redirect_url:
                    codes_param = redirect_url.split('codes=')[1]
                    print(f"DEBUG: Codes parameter: {codes_param}")
                    order_codes = codes_param.split(',')
                    print(f"DEBUG: Order codes: {order_codes}")
                    if order_codes:
                        order_code = order_codes[0]  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –∫–æ–¥
                        print(f"üìã –ö–æ–¥ –∑–∞–∫–∞–∑–∞: {order_code}")
                        return order_code
                else:
                    print("DEBUG: No 'codes=' found in redirect URL")
            else:
                print(f"DEBUG: order-success not found in redirect URL or no redirect URL")
            
            print("‚ö†Ô∏è –ö–æ–¥ –∑–∞–∫–∞–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ–¥–∏—Ä–µ–∫—Ç–µ")
            return None
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞: {response.status_code}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è: {e}")
        return None

def test_order_search(order_code):
    """–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –∑–∞–∫–∞–∑–∞"""
    if not order_code:
        print("‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –ø–æ–∏—Å–∫–∞ - –Ω–µ—Ç –∫–æ–¥–∞ –∑–∞–∫–∞–∑–∞")
        return False
        
    print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –∑–∞–∫–∞–∑–∞ {order_code}...")
    try:
        search_data = {
            'order_code': order_code,
            'phone': '+7 (999) 123-45-67'
        }
        
        response = requests.post(f"{BASE_URL}/shop/search-order", data=search_data)
        
        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–∫–∞–∑ –Ω–∞–π–¥–µ–Ω
            if "–Ω–µ –Ω–∞–π–¥–µ–Ω—ã" not in response.text.lower():
                print("‚úÖ –ó–∞–∫–∞–∑ –Ω–∞–π–¥–µ–Ω")
                return True
            else:
                print("‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∑–∞–∫–∞–∑–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–∏—Å–∫–∞: {e}")
        return False

def test_whatsapp_message():
    """–¢–µ—Å—Ç WhatsApp —Å–æ–æ–±—â–µ–Ω–∏—è"""
    print("üì± –¢–µ—Å—Ç–∏—Ä—É–µ–º WhatsApp —Å–æ–æ–±—â–µ–Ω–∏–µ...")
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
        response = requests.get(f"{BASE_URL}/shop/order-success")
        
        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')
            
            # –ò—â–µ–º WhatsApp —Å–æ–æ–±—â–µ–Ω–∏–µ
            whatsapp_text = soup.find('div', class_='bg-green-50')
            if whatsapp_text:
                message = whatsapp_text.get_text()
                print("‚úÖ WhatsApp —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
                if "—Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã" in message.lower():
                    print("‚úÖ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã —É–∫–∞–∑–∞–Ω –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏")
                    return True
                else:
                    print("‚ö†Ô∏è –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏")
                    return False
            else:
                print("‚ùå WhatsApp —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∑–∞–∫–∞–∑–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è WhatsApp: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –∏ –ø–æ–∏—Å–∫–∞")
    print("=" * 50)
    
    results = []
    
    # –¢–µ—Å—Ç 1: –î–æ—Å—Ç—É–ø –∫ –º–∞–≥–∞–∑–∏–Ω—É
    results.append(test_shop_access())
    
    # –¢–µ—Å—Ç 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
    results.append(test_add_to_cart())
    
    # –¢–µ—Å—Ç 3: –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    order_code = test_checkout()
    results.append(order_code is not None)
    
    # –¢–µ—Å—Ç 4: –ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–∞
    results.append(test_order_search(order_code))
    
    # –¢–µ—Å—Ç 5: WhatsApp —Å–æ–æ–±—â–µ–Ω–∏–µ
    results.append(test_whatsapp_message())
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\n" + "=" * 50)
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    
    passed = sum(results)
    total = len(results)
    
    print(f"‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: {passed}/{total}")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ –ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ WhatsApp —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ.")
        print("‚ùå –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤: " + ("–†–∞–±–æ—Ç–∞–µ—Ç" if results[2] else "–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"))
        print("‚ùå –ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–æ–≤: " + ("–†–∞–±–æ—Ç–∞–µ—Ç" if results[3] else "–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"))
        print("‚ùå WhatsApp —Å–æ–æ–±—â–µ–Ω–∏—è: " + ("–ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã" if results[4] else "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã"))

if __name__ == "__main__":
    main()
