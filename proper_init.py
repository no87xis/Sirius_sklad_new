#!/usr/bin/env python3
"""
–ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Sirius Group
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç SQLAlchemy –±–µ–∑ –∫–æ—Å—Ç—ã–ª–µ–π
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

try:
    print("üîç –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π...")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Base –∏ engine
    from app.db import Base, engine
    
    print("‚úÖ Base –∏ engine –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ Base
    from app.models.user import User, UserRole
    from app.models.product import Product
    from app.models.order import Order
    from app.models.shop_cart import ShopCart
    from app.models.product_photo import ProductPhoto
    
    print("‚úÖ –í—Å–µ –º–æ–¥–µ–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
    
    # –°–æ–∑–¥–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
    print("üî® –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
    Base.metadata.create_all(bind=engine)
    print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")
    
    # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞
    print("üë§ –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∞...")
    from app.db import SessionLocal
    from app.services.auth import get_password_hash
    
    db = SessionLocal()
    try:
        admin = db.query(User).filter(User.username == 'admin').first()
        if not admin:
            admin_user = User(
                username='admin',
                hashed_password=get_password_hash('admin123'),
                role=UserRole.ADMIN,
                is_active=True,
                is_superuser=True
            )
            db.add(admin_user)
            db.commit()
            print('‚úÖ –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω: admin / admin123')
        else:
            print('‚úÖ –ê–¥–º–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
    finally:
        db.close()
    
    print("üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
    sys.exit(1)
